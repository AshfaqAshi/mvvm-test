// Mocks generated by Mockito 5.0.15 from annotations
// in technical_test/test/local_db_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:technical_test/model/result.dart' as _i2;
import 'package:technical_test/model/user.dart' as _i5;
import 'package:technical_test/services/localdb_service.dart' as _i3;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeResult_0<T> extends _i1.Fake implements _i2.Result<T> {}

/// A class which mocks [LocalDBService].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocalDBService extends _i1.Mock implements _i3.LocalDBService {
  MockLocalDBService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Result<_i5.User>> getLoggedInUser() =>
      (super.noSuchMethod(Invocation.method(#getLoggedInUser, []),
              returnValue:
                  Future<_i2.Result<_i5.User>>.value(_FakeResult_0<_i5.User>()))
          as _i4.Future<_i2.Result<_i5.User>>);
  @override
  _i4.Future<_i2.Result<_i5.User>> saveLoggedInUser(_i5.User? user) =>
      (super.noSuchMethod(Invocation.method(#saveLoggedInUser, [user]),
              returnValue:
                  Future<_i2.Result<_i5.User>>.value(_FakeResult_0<_i5.User>()))
          as _i4.Future<_i2.Result<_i5.User>>);
  @override
  _i4.Future<_i2.Result<bool>> logoutUser() => (super.noSuchMethod(
          Invocation.method(#logoutUser, []),
          returnValue: Future<_i2.Result<bool>>.value(_FakeResult_0<bool>()))
      as _i4.Future<_i2.Result<bool>>);
  @override
  String toString() => super.toString();
}
